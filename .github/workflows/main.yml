name: CI

on: [push, pull_request]

env:
  COLORTERM: 'yes'
  TERM: 'xterm-256color'
  PYTEST_ADDOPTS: '--color=yes'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python:
          - "3.8"
        ansible:
          - stable-2.9
          - stable-2.10
          - stable-2.11
          - stable-2.12
          - stable-2.13
          - devel
        include:
          - python: "2.7"
            ansible: "stable-2.11"
          - python: "3.5"
            ansible: "stable-2.11"
          - python: "3.6"
            ansible: "stable-2.11"
          - python: "3.7"
            ansible: "stable-2.11"
          - python: "3.9"
            ansible: "devel"
          - python: "3.10"
            ansible: "devel"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}
      - name: Restore pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install libyaml-dev for PyYAML
        run: sudo apt-get install -y libyaml-dev
      - name: Install Ansible
        run: pip install --upgrade git+https://github.com/ansible/ansible.git@${{ matrix.ansible }}
      - name: Install dependencies
        run: make test-setup
      - name: Install required collections for ansible-base (2.10+)
        run: ansible-galaxy collection install community.general
        if: matrix.ansible != 'stable-2.9'
      - name: Run sanity tests
        run: make SANITY_OPTS="--local" sanity
        if: matrix.ansible != 'stable-2.9'

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - name: Restore pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: make doc-setup
      - name: Build docs
        run: make doc
      - name: Upload docs artifact
        uses: actions/upload-artifact@v3
        with:
          name: docs-html
          path: docs/_build/html/

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - name: Restore pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: pip install --upgrade -r requirements-lint.txt ansible
      - name: Run lint
        run: make lint
      - name: Upload collection artifact
        uses: actions/upload-artifact@v3
        with:
          name: collection
          path: theforeman-operations-*.tar.gz

  molecule:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ansible:
          - stable-2.9
          - stable-2.10
          - stable-2.11
          - stable-2.12
          - stable-2.13
          - devel
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - name: Install Ansible
        run: pip install --upgrade git+https://github.com/ansible/ansible.git@${{ matrix.ansible }}
      - name: Install dependencies
        run: make test-setup
      - name: Run tests
        env:
          DRIVER_NAME: docker
        run: ./tests/molecule.sh
